{"version":3,"sources":["component_library/Searchbar.js","component_library/res/profile_icon_white.svg","component_library/res/menu_icon_white.svg","component_library/Navbar.js","components/Map.js","components/QueryForm.js","App.js","reportWebVitals.js","index.js"],"names":["TrieNode","this","parent","children","value","query","SearchBar","props","handleChange","e","target","handleAutocomplete","handleFocus","setState","show_autocomplete","handleClickOutside","wrapperRef","current","contains","state","substring","length","cur_node","getNode","c","autocomplete_options","getSuggestions","suggestion_root","suggestions","suggestion","cur","i","charAt","node","getSuggestionsHelper","cur_suggestions","push","Object","keys","child_key","child","sort","a","b","React","createRef","max_suggestions","div_style","height","width","input_style","font_size","onSubmit","preventDefault","document","addEventListener","removeEventListener","suggestionsHTML","map","option","idx","className","style","onClick","ref","type","onChange","onFocus","Component","NavBar","handleToggleSections","show_profile_sections","searchbar_options","searchbar_height","searchbar_width","fontSize","icon_style","icon_height","icon_width","icon_margin","profile_sections","sections","title","profileSectionsHTML","show_searchbar","src","MenuIcon","ProfileIcon","Map","disable_options","zoomControl","draggable","fullscreenControl","disableDefaultUI","night_mode","styles","elementType","stylers","color","featureType","visibility","disable","markers","center","lat","lng","zoom","container_style","map_options","markersHTML","marker","position","googleMapsApiKey","mapContainerStyle","options","QueryForm","handleToggle","trip_options","includes","filter","item","handleInputChange","field","trip_start","trip_location","contact","handleSlide","price_range","handleSubmit","trip_query","location","price","start_location","trip","JSON","stringify","require","post","then","response","alert_type","catch","error","valuetext","travelHTML","switchHTML","Switch","checked","FormControlLabel","control","label","transportationHTML","roomHTML","alertHTML","Alert","severity","Typography","TextField","FormGroup","id","gutterBottom","Slider","valueLabelDisplay","aria-labelledby","getAriaValueText","step","min","max","Button","variant","App","handleSearch","history","pathname","search","searchbar_suggestions","places","name","console","log","path","exact","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","href","rel","basename","process","getElementById"],"mappings":"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","file":"static/js/main.eec5826e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Searchbar.css'\r\n\r\nclass TrieNode {\r\n    constructor() {\r\n        this.parent = null\r\n        this.children = {}\r\n        this.value = 0\r\n        this.query = null\r\n    }\r\n}\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        /*\r\n        props contains {\r\n            query: String, the current query being searched for,\r\n            suggestions: Array[String], autocomplete options (suggestions that appear more frequently are prioritized),\r\n            fontSize: int, size of the font,\r\n            height: int, height of the component,\r\n            width: int, width of the component\r\n        }\r\n        */\r\n\r\n        super(props)\r\n\r\n        this.suggestion_root = new TrieNode()\r\n        if ('suggestions' in props) {\r\n            for (var suggestion of props.suggestions) {\r\n                var cur = this.suggestion_root\r\n                for (var i = 0; i < suggestion.length; i++) {\r\n                    var c = suggestion.charAt(i)\r\n                    if (c in cur.children) {\r\n                        cur = cur.children[c]\r\n                    } else {\r\n                        cur.children[c] = new TrieNode()\r\n                        cur.children[c].parent = cur\r\n                        cur = cur.children[c]\r\n                    }\r\n                }\r\n                cur.value += 1\r\n                cur.query = suggestion\r\n            }\r\n        }\r\n\r\n        // Will return this.suggestion_root for the empty query\r\n        this.getNode = (value) => {\r\n            var node = this.suggestion_root\r\n            for (var i = 0; i < value.length; i++) {\r\n                var c = value.charAt(i)\r\n                if (c in node.children) {\r\n                    node = node.children[c]\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n            return node\r\n        }\r\n        \r\n        this.getSuggestionsHelper = (node, cur_suggestions) => {\r\n            if (node.value > 0) {\r\n                cur_suggestions.push({ query: node.query, value: node.value })\r\n            }\r\n\r\n            for (var child_key of Object.keys(node.children)) {\r\n                var child = node.children[child_key]\r\n                this.getSuggestionsHelper(child, cur_suggestions)\r\n            }\r\n        }\r\n\r\n        this.getSuggestions = () => {\r\n            if (this.cur_node == null) {\r\n                return []\r\n            }\r\n\r\n            var cur_suggestions = []\r\n            this.getSuggestionsHelper(this.cur_node, cur_suggestions)\r\n            cur_suggestions.sort((a, b) => (a.value < b.value) ? 1 : ((b.value < a.value) ? -1 : 0))\r\n            return cur_suggestions\r\n        }\r\n\r\n        var query = 'query' in props ? props.query : \"\"\r\n        this.cur_node = this.getNode(query)\r\n        var autocomplete_options = this.getSuggestions()\r\n        this.wrapperRef = React.createRef()\r\n\r\n\r\n        this.state = {\r\n            query: query,\r\n            autocomplete_options: autocomplete_options,\r\n            max_suggestions: 'max_suggestions' in props ? props.max_suggestions : 4,\r\n            show_autocomplete: false,\r\n            div_style: {\r\n                \"height\": 'height' in props ? props.height : \"300px\",\r\n                \"width\": 'width' in props ? props.width : \"200px\"\r\n            },\r\n            input_style: {\r\n                \"fontSize\": 'font_size' in props ? props.font_size : \"14px\"\r\n            },\r\n            onSubmit: 'onSubmit' in props ? props.onSubmit : (e, query) => {e.preventDefault()}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside)\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const value = e.target.value\r\n        this.handleAutocomplete(value)\r\n    }\r\n\r\n    handleFocus = () => {\r\n        this.setState({\r\n            show_autocomplete: true\r\n        })\r\n    }\r\n\r\n    handleClickOutside = (e) => {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(e.target)) {\r\n            this.setState({\r\n                show_autocomplete: false\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAutocomplete = (value) => {\r\n        if (this.state.query.substring(0, this.state.query.length - 1) === value) {\r\n            // Deleting the last character\r\n            if (this.cur_node === null) {\r\n                this.cur_node = this.getNode(value)\r\n            } else if (this.cur_node.parent != null) {\r\n                this.cur_node = this.cur_node.parent\r\n            }\r\n\r\n        } else if (value.substring(0, value.length - 1) === this.state.query) {\r\n            // Add a new character\r\n            const c = value[value.length - 1]\r\n            if (this.cur_node != null && c in this.cur_node.children) {\r\n                this.cur_node = this.cur_node.children[c]\r\n            } else {\r\n                this.cur_node = null\r\n            }\r\n        } else {\r\n            this.cur_node = this.getNode(value)\r\n        }\r\n        \r\n        var autocomplete_options = this.getSuggestions()\r\n        \r\n        this.setState({\r\n            query: value,\r\n            autocomplete_options: autocomplete_options\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const suggestionsHTML = this.state.autocomplete_options.map((option, idx) => {\r\n            if (idx > this.state.max_suggestions - 1) {\r\n                return null\r\n            }\r\n            return (\r\n                <div className=\"autocompleteSuggestion\" key={option.query} style={this.state.input_style} onClick={() => this.handleAutocomplete(option.query)}>\r\n                    <p> {option.query} </p>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"SearchBar\" style={this.state.div_style} ref={this.wrapperRef}>\r\n                <form onSubmit={(e) => this.state.onSubmit(e, this.state.query)}>\r\n                    <input type=\"text\" value={this.state.query} onChange={this.handleChange} onFocus={this.handleFocus} style={this.state.input_style}/>\r\n                    {this.state.show_autocomplete ? \r\n                        <div className=\"autocompleteSuggestions\"> {suggestionsHTML} </div> : null\r\n                    }\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar\r\n","export default __webpack_public_path__ + \"static/media/profile_icon_white.d72654c4.svg\";","export default __webpack_public_path__ + \"static/media/menu_icon_white.71abf066.svg\";","import React, { Component } from 'react'\r\nimport SearchBar from './Searchbar'\r\nimport './Navbar.css'\r\nimport ProfileIcon from './res/profile_icon_white.svg'\r\nimport MenuIcon from './res/menu_icon_white.svg'\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        /*\r\n        props contains {\r\n            query: String, the current query being searched for,\r\n            suggestions: Array[String], autocomplete options (suggestions that appear more frequently are prioritized),\r\n            fontSize: int, size of the font,\r\n            height: int, height of the component,\r\n            width: int, width of the component\r\n        }\r\n        */\r\n\r\n        super(props)\r\n\r\n        this.wrapperRef = React.createRef()\r\n        this.state = {\r\n            searchbar_options: {\r\n                max_suggestions: 'max_suggestions' in props ? props.max_suggestions : 4,\r\n                height: 'searchbar_height' in props ? props.searchbar_height : \"300px\",\r\n                width: 'searchbar_width' in props ? props.searchbar_width : \"450px\",\r\n                fontSize: 'font_size' in props ? props.font_size : \"14px\",\r\n                onSubmit: 'onSubmit' in props ? props.onSubmit : (e, query) => {e.preventDefault()}\r\n            },\r\n            div_style: {\r\n                \"height\": 'height' in props ? props.height : \"50px\",\r\n                \"width\": 'width' in props ? props.width : \"100%\",\r\n                \"fontSize\": 'font_size' in props ? props.font_size : \"14px\"\r\n            },\r\n            icon_style: {\r\n                \"height\": 'icon_height' in props ? props.icon_height : \"25px\",\r\n                \"width\": 'icon_width' in props ? props.icon_width : \"25px\",\r\n                \"margin\": 'icon_margin' in props ? props.icon_margin : \"2px 4px\"\r\n            },\r\n            input_style: {\r\n                \"fontSize\": 'font_size' in props ? props.font_size : \"14px\"\r\n            },\r\n            profile_sections: 'sections' in props ? props.sections : [\"Sign up\", \"Log in\"],\r\n            show_profile_sections: false,\r\n            title: 'title' in props ? props.title : [\"baryl\"]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleToggleSections)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleToggleSections)\r\n    }\r\n\r\n    handleToggleSections = (e) => {\r\n        if (this.wrapperRef && this.wrapperRef.current.contains(e.target)) {\r\n            this.setState({\r\n                show_profile_sections: ! this.state.show_profile_sections\r\n            })\r\n        } else {\r\n            this.setState({\r\n                show_profile_sections: false\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const profileSectionsHTML = this.state.profile_sections.map((option, idx) => {\r\n            return (\r\n                <div className=\"ProfileSection\" key={idx} style={this.state.input_style}>\r\n                    <p> {option} </p>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"NavBar\" style={this.state.div_style}>\r\n                <div className=\"Title\">\r\n                    <h2> {this.state.title} </h2>\r\n                </div>\r\n                <div className=\"SearchBarContainer\">\r\n                    { this.props.show_searchbar ? <SearchBar {...this.state.searchbar_options} suggestions={this.props.suggestions} query={this.props.query}/> : null }\r\n                </div>\r\n                <div className=\"ProfileContainer\">\r\n                    <div className=\"ProfileIcons\" ref={this.wrapperRef}>\r\n                        <img src={MenuIcon} style={this.state.icon_style} />\r\n                        <img src={ProfileIcon} style={this.state.icon_style} />\r\n                    </div>\r\n                    { this.state.show_profile_sections ? <div className=\"ProfileSections\"> {profileSectionsHTML} </div> : null }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar\r\n","import React, { Component } from 'react'\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api'\r\n\r\nclass Map extends Component {\r\n    constructor(props) {\r\n        /*\r\n        props contains {\r\n            markers: Array, markers on the map\r\n            center: Object, center of the map\r\n            zoom: int, default zoom of the map\r\n            height: int, height of the component,\r\n            width: int, width of the component\r\n        }\r\n        */\r\n        super(props)\r\n\r\n        const default_center = {\r\n            lat: 39.8283,\r\n            lng: -98.5795\r\n        }\r\n\r\n        this.disable_options = {\r\n            zoomControl: false,\r\n            draggable: false,\r\n            fullscreenControl: false,\r\n            disableDefaultUI: true\r\n        }\r\n\r\n        this.night_mode = {\r\n            styles: [\r\n              { elementType: \"geometry\", stylers: [{ color: \"#242f3e\" }] },\r\n              { elementType: \"labels.text.stroke\", stylers: [{ color: \"#242f3e\" }] },\r\n              { elementType: \"labels.text.fill\", stylers: [{ color: \"#242f3e\" }] },\r\n              {\r\n                featureType: \"administrative.locality\",\r\n                elementType: \"labels.text.fill\",\r\n                stylers: [{ color: \"#d59563\" }],\r\n              },\r\n              {\r\n                featureType: \"poi\",\r\n                elementType: \"labels.text.fill\",\r\n                stylers: [{ visibility: \"off\" }],\r\n              },\r\n              {\r\n                featureType: \"poi.park\",\r\n                elementType: \"geometry\",\r\n                stylers: [{ color: \"#263c3f\" }],\r\n              },\r\n              {\r\n                featureType: \"poi.park\",\r\n                elementType: \"labels.text.fill\",\r\n                stylers: [{ color: \"#6b9a76\" }],\r\n              },\r\n              {\r\n                featureType: \"road\",\r\n                elementType: \"geometry\",\r\n                stylers: [{ color: \"#38414e\" }],\r\n              },\r\n              {\r\n                featureType: \"road\",\r\n                elementType: \"geometry.stroke\",\r\n                stylers: [{ color: \"#212a37\" }],\r\n              },\r\n              {\r\n                featureType: \"road\",\r\n                elementType: \"labels.text.fill\",\r\n                stylers: [{ color: \"#9ca5b3\" }],\r\n              },\r\n              {\r\n                featureType: \"road.highway\",\r\n                elementType: \"geometry\",\r\n                stylers: [{ color: \"#746855\" }],\r\n              },\r\n              {\r\n                featureType: \"road.highway\",\r\n                elementType: \"geometry.stroke\",\r\n                stylers: [{ color: \"#1f2835\" }],\r\n              },\r\n              {\r\n                featureType: \"road.highway\",\r\n                elementType: \"labels.text.fill\",\r\n                stylers: [{ color: \"#f3d19c\" }],\r\n              },\r\n              {\r\n                featureType: \"transit\",\r\n                elementType: \"geometry\",\r\n                stylers: [{ color: \"#2f3948\" }],\r\n              },\r\n              {\r\n                featureType: \"transit.station\",\r\n                elementType: \"labels.text.fill\",\r\n                stylers: [{ color: \"#d59563\" }],\r\n              },\r\n              {\r\n                featureType: \"water\",\r\n                elementType: \"geometry\",\r\n                stylers: [{ color: \"#17263c\" }],\r\n              },\r\n              {\r\n                featureType: \"water\",\r\n                elementType: \"labels.text.fill\",\r\n                stylers: [{ color: \"#515c6d\" }],\r\n              },\r\n              {\r\n                featureType: \"water\",\r\n                elementType: \"labels.text.stroke\",\r\n                stylers: [{ color: \"#17263c\" }],\r\n              }\r\n            ]\r\n        }\r\n\r\n        if (props.disable) {\r\n          this.disable_options.styles = this.night_mode.styles\r\n        }\r\n\r\n        this.state = {\r\n            markers: 'markers' in props ? props.markers : [],\r\n            center: 'center' in props ? props.center : default_center,\r\n            zoom: 'zoom' in props ? props.zoom : 5,\r\n            container_style: {\r\n                \"height\": 'height' in props ? props.height : \"100vh\",\r\n                \"width\": 'width' in props ? props.width : \"100%\"\r\n            },\r\n            map_options: props.disable ? this.disable_options : this.night_mode\r\n        }\r\n\r\n    }   \r\n\r\n    // Create a google maps API key\r\n    render() {\r\n        const markersHTML = this.state.markers.map((marker, idx) => {\r\n            return (\r\n                <Marker position={{ lat: marker.lat, lng: marker.lng }} key={idx} />\r\n            )\r\n        })\r\n        \r\n        return (\r\n            <div className=\"Map\">\r\n                <LoadScript\r\n                    googleMapsApiKey=\"\"\r\n                >\r\n                    <GoogleMap\r\n                        mapContainerStyle={this.state.container_style}\r\n                        center={this.state.center}\r\n                        zoom={this.state.zoom}\r\n                        options={this.props.disable ? this.disable_options : this.night_mode}\r\n                    >\r\n                        { markersHTML }\r\n                    <></>\r\n                    </GoogleMap>\r\n                </LoadScript>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Map\r\n","import React, { Component } from 'react'\r\nimport { Slider, Switch, Typography, FormControlLabel, FormGroup, TextField, Button } from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport './QueryForm.css'\r\n\r\nclass QueryForm extends Component {\r\n    constructor(props) {\r\n        /*\r\n        props contains {\r\n            text: String, the text to display,\r\n            onClick: function, call when button is clicked\r\n            fontSize: int, size of the font,\r\n            height: int, height of the component,\r\n            width: int, width of the component\r\n        }\r\n        */\r\n\r\n        super(props)\r\n\r\n        this.state = {\r\n            trip_start: \"\",\r\n            trip_location: \"\",\r\n            contact: \"\",\r\n            trip_options: [],\r\n            price_range: [0, 1000],\r\n            alert_type: \"none\"\r\n        }\r\n    }\r\n\r\n    handleToggle = (e, value) => {\r\n        var options = this.state.trip_options\r\n        if (options.includes(value)) {\r\n            options = options.filter(item => item != value)\r\n        } else {\r\n            options = [...options, value]\r\n        }\r\n\r\n        this.setState({\r\n            trip_options: options\r\n        })\r\n    }\r\n\r\n    handleInputChange = (e, field) => {\r\n        const value = e.target.value\r\n        if (field === \"start\") {\r\n            this.setState({\r\n                trip_start: value\r\n            })\r\n        } else if (field === \"location\") {\r\n            this.setState({\r\n                trip_location: value\r\n            })\r\n        } else {\r\n            this.setState({\r\n                contact: value\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSlide = (e, value) => {\r\n        this.setState({\r\n            price_range: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        const trip_query = {\r\n            location: this.state.trip_location,\r\n            options: this.state.trip_options,\r\n            price: this.state.price_range,\r\n            start_location: this.state.trip_start,\r\n            contact: this.state.contact\r\n        }\r\n\r\n        const trip = {\r\n            trip: JSON.stringify(trip_query)\r\n        }\r\n\r\n        const axios = require('axios')\r\n        axios.post('https://baryl.herokuapp.com/trip_query', trip).then((response) => {\r\n            this.setState({\r\n                alert_type: \"success\"\r\n            })\r\n        }).catch((error) => {\r\n            this.setState({\r\n                alert_type: \"error\"\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    valuetext = (value) => {\r\n        return '$' + '${value}'\r\n    }\r\n\r\n    render() {\r\n        const travel = [\"Plane\", \"Bus\", \"Train\", \"Boat\"]\r\n        const transportation = [\"Bicycle\", \"Bird\", \"Uber\", \"Lyft\", \"Taxi\", \"Rental Car\", \"Subway\"]\r\n        const room = [\"Airbnb\", \"Hotel\", \"Motel\"] \r\n\r\n        const travelHTML = travel.map((option) => {\r\n            const switchHTML = <Switch\r\n                checked={this.state.trip_options.includes(option)}\r\n                color=\"primary\"\r\n                onChange={(e) => this.handleToggle(e, option)}\r\n            />\r\n            \r\n            return (\r\n                <FormControlLabel\r\n                    control={switchHTML}\r\n                    label={option}\r\n                />\r\n            )\r\n        })\r\n\r\n        const transportationHTML = transportation.map((option) => {\r\n            const switchHTML = <Switch\r\n                checked={this.state.trip_options.includes(option)}\r\n                color=\"primary\"\r\n                onChange={(e) => this.handleToggle(e, option)}\r\n            />\r\n            \r\n            return (\r\n                <FormControlLabel\r\n                    control={switchHTML}\r\n                    label={option}\r\n                />\r\n            )\r\n        })\r\n\r\n        const roomHTML = room.map((option) => {\r\n            const switchHTML = <Switch\r\n                checked={this.state.trip_options.includes(option)}\r\n                color=\"primary\"\r\n                onChange={(e) => this.handleToggle(e, option)}\r\n            />\r\n            \r\n            return (\r\n                <FormControlLabel\r\n                    control={switchHTML}\r\n                    label={option}\r\n                />\r\n            )\r\n        })\r\n\r\n        var alertHTML = null\r\n        if (this.state.alert_type === \"success\") {\r\n            alertHTML = <Alert severity=\"success\">Your trip was submitted!</Alert>\r\n        } else if (this.state.alert_type === \"error\") {\r\n            alertHTML = <Alert severity=\"error\">An error occurred.</Alert>\r\n        }\r\n\r\n        return (\r\n            <div className=\"QueryForm\">\r\n                <h2>\r\n                    Trip Price Calculation\r\n                </h2>\r\n                <div className=\"TripLocations\">\r\n                    <div className=\"InputGroup\">\r\n                        <Typography>\r\n                            Start Location\r\n                        </Typography>\r\n                        <TextField label=\"Location\" onChange={(e) => this.handleInputChange(e, \"start\")}/>\r\n                    </div>\r\n                    <div className=\"InputGroup\">\r\n                        <Typography>\r\n                            Trip Location\r\n                        </Typography>\r\n                        <TextField label=\"Location\" onChange={(e) => this.handleInputChange(e, \"location\")}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"TripOptions\">\r\n                    <Typography>\r\n                        Travel Options\r\n                    </Typography>\r\n                    <FormGroup>\r\n                        {travelHTML}\r\n                    </FormGroup>\r\n                    <Typography>\r\n                        Transportation Options\r\n                    </Typography>\r\n                    <FormGroup>\r\n                        {transportationHTML}\r\n                    </FormGroup>\r\n                    <Typography>\r\n                        Room/Board Options\r\n                    </Typography>\r\n                    <FormGroup>\r\n                        {roomHTML}\r\n                    </FormGroup>\r\n                </div>\r\n                <div className=\"PriceSlider\">\r\n                    <Typography id=\"discrete-slider-custom\" gutterBottom>\r\n                        Price Range\r\n                    </Typography>\r\n                    <Slider\r\n                        value={this.state.price_range}\r\n                        onChange={this.handleSlide}\r\n                        valueLabelDisplay=\"auto\"\r\n                        aria-labelledby=\"range-slider\"\r\n                        getAriaValueText={this.valuetext}\r\n                        step={100}\r\n                        min={0}\r\n                        max={20000}\r\n                    />\r\n                </div>\r\n                <div className=\"Contact\">\r\n                    <div className=\"InputGroup\">\r\n                        <Typography>\r\n                            Contact Information\r\n                        </Typography>\r\n                        <TextField label=\"Contact Info\" onChange={(e) => this.handleInputChange(e, \"contact\")}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Alert\">\r\n                    {alertHTML}\r\n                </div>\r\n                <div className=\"SubmitButton\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QueryForm","import React, { Component } from 'react'\nimport SearchBar from './component_library/Searchbar'\nimport NavBar from './component_library/Navbar'\nimport Map from './components/Map'\nimport QueryForm from './components/QueryForm'\n\nimport {\n    Switch,\n    Route,\n    withRouter\n  } from \"react-router-dom\"\nimport './App.css'\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        const searchbar_suggestions = [\"San Francisco\", \"San Mateo\", \"Los Angeles\", \"New York\", \"Chicago\", \"Seattle\", \"Atlanta\"]\n        const places = [\n            {\n                name: \"San Francisco\",\n                lat: 37.773972,\n                lng: -122.431297\n            },\n            {\n                name: \"San Mateo\",\n                lat: 37.554169, \n                lng: -122.313057\n            },\n            {\n                name: \"Los Angeles\",\n                lat: 34.024212, \n                lng: -118.496475\n            },\n            {\n                name: \"New York\",\n                lat: 40.730610, \n                lng: -73.935242\n            },\n            {\n                name: \"Chicago\",\n                lat: 41.881832, \n                lng: -87.623177\n            },\n            {\n                name: \"Seattle\",\n                lat: 47.608013, \n                lng: -122.335167\n            },\n            {\n                name: \"Atlanta\",\n                lat: 33.753746, \n                lng: -84.386330\n            }\n        ]\n\n        this.state = {\n            searchbar_suggestions: searchbar_suggestions,\n            places: places,\n            query: \"\",\n        }\n        console.log(this.props.history)\n    }\n\n    handleSearch = (e, query) => {\n        this.props.history.push({\n            pathname: '/search',\n            search: '?query=' + query\n        })\n        this.setState({\n            query: query\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Switch>\n                    <Route path=\"/home\">\n                        <div className=\"HomePage\">\n                            <NavBar />\n                            <Map disable={true} night_mode={true} markers={this.state.places}/>\n                            <h1 className=\"title\"> Baryl </h1>\n                            <SearchBar query={\"\"} suggestions={this.state.searchbar_suggestions} width=\"400px\" font_size=\"14px\" onSubmit={this.handleSearch}/>\n                        </div>\n                    </Route>\n                    <Route path=\"/search\">\n                        <div className=\"Dashboard\">\n                            <NavBar show_searchbar={true} suggestions={this.state.searchbar_suggestions} query={this.state.query} />\n                            <Map disable={false} markers={this.state.places}/>\n                        </div>\n                    </Route>\n                    <Route exact path=\"/\">\n                        <NavBar />\n                        <QueryForm />\n                    </Route>\n                </Switch>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(App)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    BrowserRouter as Router\n  } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital@1&display=swap\" rel=\"stylesheet\" />\n        <link href=\"https://fonts.googleapis.com/css2?family=Crimson+Text&display=swap\" rel=\"stylesheet\" />\n        <Router basename={process.env.PUBLIC_URL}><App /></Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}